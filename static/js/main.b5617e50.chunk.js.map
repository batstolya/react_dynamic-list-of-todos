{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onUserId","selectedId","className","map","todo","id","completed","classNames","title","type","onClick","far","TodoFilter","query","onQuery","option","setOption","onChange","event","target","value","placeholder","currentTarget","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","usersFromApi","href","email","name","App","setTodos","selectedTodoId","setSelectedTodoId","setQuery","visibleTodos","queryLowerCase","toLocaleLowerCase","filter","includes","selectedTodo","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5617e50.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onUserId: (id: number) => void;\n  selectedId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onUserId, selectedId }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo: Todo) => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onUserId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames({\n                    far: true,\n                    'fa-eye': selectedId !== todo.id,\n                    'fa-eye-slash': selectedId === todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  onQuery: (event: string) => void;\n  option: string;\n  setOption: (event: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQuery,\n  option,\n  setOption,\n}) => {\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n            value={option}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQuery(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  onCloseModal: () => void;\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ onCloseModal, todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then((usersFromApi) => setUser(usersFromApi));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [query, setQuery] = useState<string>('');\n  const [option, setOption] = useState<string>('all');\n\n  const closeModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  useEffect(() => {\n    getTodos().then((todo) => setTodos(todo));\n  }, []);\n\n  let visibleTodos = todos;\n\n  if (query) {\n    const queryLowerCase = query.toLocaleLowerCase();\n\n    visibleTodos = visibleTodos.filter((todo) => todo.title.toLocaleLowerCase().includes(queryLowerCase));\n  }\n\n  switch (option) {\n    case 'active':\n      visibleTodos = visibleTodos.filter((todo) => !todo.completed);\n      break;\n    case 'completed':\n      visibleTodos = visibleTodos.filter((todo) => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  const selectedTodo = visibleTodos.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQuery={setQuery}\n                option={option}\n                setOption={setOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={visibleTodos}\n                  onUserId={setSelectedTodoId}\n                  selectedId={selectedTodoId}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal onCloseModal={closeModal} todo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}